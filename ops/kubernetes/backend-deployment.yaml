kind: "Service"
apiVersion: "v1"
metadata:
  name: smaccoun-homepage-backend-service
spec:
  type: NodePort
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    app: smaccoun-homepage
    tier: backend
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: smaccoun-homepage-backend-deployment
spec:
  replicas: 1
  revisionHistoryLimit: 5
  strategy:
    type: "RollingUpdate"  
  selector:
    matchLabels:
      app: "smaccoun-homepage"
      tier: backend
      track: stable
  template:
    metadata:
      labels:
        app: "smaccoun-homepage"
        tier: backend
        track: stable
    spec:
      containers:
        - name: "smaccoun-homepage-backend"
          image: "smaccoun/smaccoun-homepage-backend:20e5c96f2e6d66a0f379b828e060bbc3a576bc88"
          envFrom:
            - configMapRef:
                name: "smaccoun-homepage-envvars" 
          env:
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: cloudsql-db-credentials
                  key: username
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: cloudsql-db-credentials
                  key: password
          terminationMessagePath: "/tmp/my-log"   
          livenessProbe:
            httpGet:
              path: /health
              port: external
            initialDelaySeconds: 5
            periodSeconds: 280
          readinessProbe:
            httpGet:
              path: /health
              port: external
            initialDelaySeconds: 5
            periodSeconds: 280
          ports:
            - containerPort: 8080
              name: "external"
              protocol: "TCP"
        - name: cloudsql-proxy
          image: gcr.io/cloudsql-docker/gce-proxy:1.11
          command: ["/cloud_sql_proxy",
                    "-instances=smaccoun-homepage=tcp:5432",
                    "-credential_file=/secrets/cloudsql/credentials.json"]
          volumeMounts:
            - name: cloudsql-instance-credentials
              mountPath: /secrets/cloudsql
              readOnly: true
        # [END proxy_container]
      # [START volumes]
      volumes:
        - name: cloudsql-instance-credentials
          secret:
            secretName: cloudsql-instance-credentials
