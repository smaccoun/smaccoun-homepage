name: lens
version: 4.16.1
id: lens-4.16.1-G1rpmi1Uqn9reYMjFLBab
key: lens-4.16.1-G1rpmi1Uqn9reYMjFLBab
license: BSD2
copyright: Copyright (C) 2012-2016 Edward A. Kmett
maintainer: Edward A. Kmett <ekmett@gmail.com>
stability: provisional
homepage: http://github.com/ekmett/lens/
synopsis: Lenses, Folds and Traversals
description:
    This package comes \"Batteries Included\" with many useful lenses for the types
    commonly used from the Haskell Platform, and with tools for automatically
    generating lenses and isomorphisms for user-supplied data types.
    .
    The combinators in @Control.Lens@ provide a highly generic toolbox for composing
    families of getters, folds, isomorphisms, traversals, setters and lenses and their
    indexed variants.
    .
    An overview, with a large number of examples can be found in the <https://github.com/ekmett/lens#lens-lenses-folds-and-traversals README>.
    .
    An introductory video on the style of code used in this library by Simon Peyton Jones is available from <http://skillsmatter.com/podcast/scala/lenses-compositional-data-access-and-manipulation Skills Matter>.
    .
    A video on how to use lenses and how they are constructed is available on <http://youtu.be/cefnmjtAolY?hd=1 youtube>.
    .
    Slides for that second talk can be obtained from <http://comonad.com/haskell/Lenses-Folds-and-Traversals-NYC.pdf comonad.com>.
    .
    More information on the care and feeding of lenses, including a brief tutorial and motivation
    for their types can be found on the <https://github.com/ekmett/lens/wiki lens wiki>.
    .
    A small game of @pong@ and other more complex examples that manage their state using lenses can be found in the <https://github.com/ekmett/lens/blob/master/examples/ example folder>.
    .
    /Lenses, Folds and Traversals/
    .
    With some signatures simplified, the core of the hierarchy of lens-like constructions looks like:
    .
    .
    <<http://i.imgur.com/ALlbPRa.png>>
    .
    <Hierarchy.png (Local Copy)>
    .
    You can compose any two elements of the hierarchy above using @(.)@ from the @Prelude@, and you can
    use any element of the hierarchy as any type it linked to above it.
    .
    The result is their lowest upper bound in the hierarchy (or an error if that bound doesn't exist).
    .
    For instance:
    .
    * You can use any 'Traversal' as a 'Fold' or as a 'Setter'.
    .
    * The composition of a 'Traversal' and a 'Getter' yields a 'Fold'.
    .
    /Minimizing Dependencies/
    .
    If you want to provide lenses and traversals for your own types in your own libraries, then you
    can do so without incurring a dependency on this (or any other) lens package at all.
    .
    /e.g./ for a data type:
    .
    > data Foo a = Foo Int Int a
    .
    You can define lenses such as
    .
    > -- bar :: Lens' (Foo a) Int
    > bar :: Functor f => (Int -> f Int) -> Foo a -> f (Foo a)
    > bar f (Foo a b c) = fmap (\a' -> Foo a' b c) (f a)
    .
    > -- quux :: Lens (Foo a) (Foo b) a b
    > quux :: Functor f => (a -> f b) -> Foo a -> f (Foo b)
    > quux f (Foo a b c) = fmap (Foo a b) (f c)
    .
    without the need to use any type that isn't already defined in the @Prelude@.
    .
    And you can define a traversal of multiple fields with 'Control.Applicative.Applicative':
    .
    > -- traverseBarAndBaz :: Traversal' (Foo a) Int
    > traverseBarAndBaz :: Applicative f => (Int -> f Int) -> Foo a -> f (Foo a)
    > traverseBarAndBaz f (Foo a b c) = Foo <$> f a <*> f b <*> pure c
    .
    What is provided in this library is a number of stock lenses and traversals for
    common haskell types, a wide array of combinators for working them, and more
    exotic functionality, (/e.g./ getters, setters, indexed folds, isomorphisms).
category: Data, Lenses, Generics
author: Edward A. Kmett
exposed: True
indefinite: False
exposed-modules:
    Control.Exception.Lens Control.Lens Control.Lens.At
    Control.Lens.Combinators Control.Lens.Cons Control.Lens.Each
    Control.Lens.Empty Control.Lens.Equality Control.Lens.Extras
    Control.Lens.Fold Control.Lens.Getter Control.Lens.Indexed
    Control.Lens.Internal Control.Lens.Internal.Bazaar
    Control.Lens.Internal.ByteString Control.Lens.Internal.CTypes
    Control.Lens.Internal.Coerce Control.Lens.Internal.Context
    Control.Lens.Internal.Deque Control.Lens.Internal.Exception
    Control.Lens.Internal.FieldTH Control.Lens.Internal.Fold
    Control.Lens.Internal.Getter Control.Lens.Internal.Indexed
    Control.Lens.Internal.Instances Control.Lens.Internal.Iso
    Control.Lens.Internal.Level Control.Lens.Internal.List
    Control.Lens.Internal.Magma Control.Lens.Internal.Prism
    Control.Lens.Internal.PrismTH Control.Lens.Internal.Review
    Control.Lens.Internal.Setter Control.Lens.Internal.TH
    Control.Lens.Internal.Zoom Control.Lens.Iso Control.Lens.Lens
    Control.Lens.Level Control.Lens.Operators Control.Lens.Plated
    Control.Lens.Prism Control.Lens.Reified Control.Lens.Review
    Control.Lens.Setter Control.Lens.TH Control.Lens.Traversal
    Control.Lens.Tuple Control.Lens.Type Control.Lens.Unsound
    Control.Lens.Wrapped Control.Lens.Zoom Control.Monad.Error.Lens
    Control.Parallel.Strategies.Lens Control.Seq.Lens Data.Array.Lens
    Data.Bits.Lens Data.ByteString.Lazy.Lens Data.ByteString.Lens
    Data.ByteString.Strict.Lens Data.Complex.Lens Data.Data.Lens
    Data.Dynamic.Lens Data.HashSet.Lens Data.IntSet.Lens Data.List.Lens
    Data.Map.Lens Data.Sequence.Lens Data.Set.Lens Data.Text.Lazy.Lens
    Data.Text.Lens Data.Text.Strict.Lens Data.Tree.Lens
    Data.Typeable.Lens Data.Vector.Generic.Lens Data.Vector.Lens
    GHC.Generics.Lens Language.Haskell.TH.Lens Numeric.Lens
    Numeric.Natural.Lens System.Exit.Lens System.FilePath.Lens
    System.IO.Error.Lens
hidden-modules: Paths_lens
abi: 6668a832787b23b355048a18d9d6da8c
trusted: False
import-dirs: /Users/stevenmaccoun/projects/smaccoun-homepage/back-end/.stack-work/install/x86_64-osx/lts-11.2/8.2.2/lib/x86_64-osx-ghc-8.2.2/lens-4.16.1-G1rpmi1Uqn9reYMjFLBab
library-dirs: /Users/stevenmaccoun/projects/smaccoun-homepage/back-end/.stack-work/install/x86_64-osx/lts-11.2/8.2.2/lib/x86_64-osx-ghc-8.2.2/lens-4.16.1-G1rpmi1Uqn9reYMjFLBab
dynamic-library-dirs: /Users/stevenmaccoun/projects/smaccoun-homepage/back-end/.stack-work/install/x86_64-osx/lts-11.2/8.2.2/lib/x86_64-osx-ghc-8.2.2
data-dir: /Users/stevenmaccoun/projects/smaccoun-homepage/back-end/.stack-work/install/x86_64-osx/lts-11.2/8.2.2/share/x86_64-osx-ghc-8.2.2/lens-4.16.1
hs-libraries: HSlens-4.16.1-G1rpmi1Uqn9reYMjFLBab
depends:
    array-0.5.2.0 base-4.10.1.0 base-orphans-0.7-CqEfBQ2VoSwBto5sloaJI4
    bifunctors-5.5.2-KnDuhLcKNOkFzduUX7D9Nv bytestring-0.10.8.2
    call-stack-0.1.0-BVjoAlBRe9FCSr5eFfllei
    comonad-5.0.3-8SgMDAF6KMUAUEwcnApd6S
    contravariant-1.4.1-8E6WUUTr4KUeVyUAaFXO6 containers-0.5.10.2
    distributive-0.5.3-F6z9Ydi0AiA6rP8AS0blTR filepath-1.4.1.2
    free-4.12.4-GJhr5eYJ5x73H5uxLs9XzG ghc-prim-0.5.1.1
    hashable-1.2.7.0-LmYYwdRyxeo1gZdEWccp3y
    kan-extensions-5.1-4LpYxSBWi4l3mXdRnAS6t3
    exceptions-0.8.3-CYMTujxEbkkJnOJ7pW82ZD
    mtl-2.2.2-8XubxMJDT8QLsstvlNotkc
    parallel-3.2.1.1-6PIhrl6oqe7Af1Z2sa6T1
    profunctors-5.2.2-G8Y15z4awcaEQ4bhYbPxqB
    reflection-2.1.3-CEHercnb7IRFwaBNsJ9rTU
    semigroupoids-5.2.2-8B6miSIqv6d3jal07sZJpH
    semigroups-0.18.4-mxkGq2xNPcBC0dj8uuk3q
    tagged-0.8.5-HviTdonkllN1ZD6he1Zn8I template-haskell-2.12.0.0
    th-abstraction-0.2.6.0-KdJUlqAwMfUIgxZVMgLLVd
    text-1.2.3.0-8nD60G3tOYT3Qi8GaESeB5 transformers-0.5.2.0
    transformers-compat-0.5.1.4-EAh8Ccrgitz4vTZtbTPyCM
    unordered-containers-0.2.9.0-AID53f8BSxj1wBLxJT9npu
    vector-0.12.0.1-JlawpRjIcMJIYPJVsWriIA
    void-0.7.2-BaCvWtelk6X2yBHg8R7RQm
abi-depends: array-0.5.2.0=26dc06837667b4f45ea7fe07c114ff89
             base-4.10.1.0=e7be07bfa4bb2c944e81ff3b2bb779a9
             base-orphans-0.7-CqEfBQ2VoSwBto5sloaJI4=ad004d7b511778651b0fb6bf84b06072
             bifunctors-5.5.2-KnDuhLcKNOkFzduUX7D9Nv=e97e45279e802135f7075082a92f10db
             bytestring-0.10.8.2=da1ce4b2f396553a61f85ea8e8522198
             call-stack-0.1.0-BVjoAlBRe9FCSr5eFfllei=f637009e526e2490e52d1ac470f88ae2
             comonad-5.0.3-8SgMDAF6KMUAUEwcnApd6S=b93f05ea88542d44c89a2a0222424e18
             contravariant-1.4.1-8E6WUUTr4KUeVyUAaFXO6=0d92ecd46a28dd0558990f4f707da5e5
             containers-0.5.10.2=e05bad6c4fbcc0d9d1fe5e555b71fbd3
             distributive-0.5.3-F6z9Ydi0AiA6rP8AS0blTR=3cdba9241bf20c2badbe5ad83ffb071f
             filepath-1.4.1.2=f49190c9093d895f9f159c40e7d1ff46
             free-4.12.4-GJhr5eYJ5x73H5uxLs9XzG=6585283fd9470d2518e3d7fc9054d82d
             ghc-prim-0.5.1.1=c8f3d173544d1472727fce7b0518abda
             hashable-1.2.7.0-LmYYwdRyxeo1gZdEWccp3y=8377eafba9562cd387453fc7d3548d74
             kan-extensions-5.1-4LpYxSBWi4l3mXdRnAS6t3=2b020fe077b18f2dd1a8544ad2bf63d2
             exceptions-0.8.3-CYMTujxEbkkJnOJ7pW82ZD=00c80873fa15ed4a4e1fb8e2ea17811b
             mtl-2.2.2-8XubxMJDT8QLsstvlNotkc=ada793ec1f149425d0c0689d53e1173b
             parallel-3.2.1.1-6PIhrl6oqe7Af1Z2sa6T1=4367e60da8ca5d4c9f4d1894719ee137
             profunctors-5.2.2-G8Y15z4awcaEQ4bhYbPxqB=20e46f6643ff2beb4353d7075ac7ae72
             reflection-2.1.3-CEHercnb7IRFwaBNsJ9rTU=159a65e691dcdfc8f44ca1e1c90d8d4d
             semigroupoids-5.2.2-8B6miSIqv6d3jal07sZJpH=0d61a58121033beda5d2ad79be13b50e
             semigroups-0.18.4-mxkGq2xNPcBC0dj8uuk3q=c739600aa012ae17eb506df1a043419b
             tagged-0.8.5-HviTdonkllN1ZD6he1Zn8I=dfe494573a7f684ed5cd050d4c0c62b8
             template-haskell-2.12.0.0=9494fa1818fce14f4310f85528f430a4
             th-abstraction-0.2.6.0-KdJUlqAwMfUIgxZVMgLLVd=4cc400dfa38128791501a1035c457cc8
             text-1.2.3.0-8nD60G3tOYT3Qi8GaESeB5=323a73cd72688a5496ddde8a3fd75242
             transformers-0.5.2.0=e04579c0363c9229351d1a0b394bf2d5
             transformers-compat-0.5.1.4-EAh8Ccrgitz4vTZtbTPyCM=94a5340d64a5db3506fe5654c7b40389
             unordered-containers-0.2.9.0-AID53f8BSxj1wBLxJT9npu=69cbfa12a5040c308da0ca464e483bf8
             vector-0.12.0.1-JlawpRjIcMJIYPJVsWriIA=4128d312d79736883e640efb030e1a7e
             void-0.7.2-BaCvWtelk6X2yBHg8R7RQm=5d64d1dedc6efb1047d1e7503f899482
haddock-interfaces: /Users/stevenmaccoun/projects/smaccoun-homepage/back-end/.stack-work/install/x86_64-osx/lts-11.2/8.2.2/doc/lens-4.16.1/lens.haddock
haddock-html: /Users/stevenmaccoun/projects/smaccoun-homepage/back-end/.stack-work/install/x86_64-osx/lts-11.2/8.2.2/doc/lens-4.16.1
