
==================== FINAL INTERFACE ====================
2018-06-01 20:39:31.00782 UTC

interface api-0.1.0.0-JXjIDZgbZwIJ0APHrPu5UG:Database.Tables.User [orphan module] [family instance module] 8022
  interface hash: f3c80b043773ff6ad2bd420181392bb4
  ABI hash: 8df8237d9109dc9b9735212a4951b7e5
  export-list hash: bafab15d7a99006306fa823e2e03c9dd
  orphan hash: ac64bbb4b85fa9d3034fb174900be5f2
  flag hash: a1ff2056f32f284d5adec783f81413e2
  sig of: Nothing
  used TH splices: True
  where
exports:
  Database.Tables.User.email
  Database.Tables.User.password
  Database.Tables.User.User
  Database.Tables.User.UserBase{Database.Tables.User.User _email _password}
  Database.Tables.User.UserEntity
  Database.Tables.User.UserT
module dependencies: AppPrelude Database.MasterEntity
                     Models.Credentials
package dependencies: StateVar-1.1.0.4 adjunctions-4.4
                      aeson-1.2.4.0 array-0.5.2.0 async-2.1.1.1 attoparsec-0.13.2.2
                      base-4.10.1.0 base-compat-0.9.3 base-orphans-0.7
                      base64-bytestring-1.0.0.1 beam-core-0.7.2.1 beam-migrate-0.3.2.0
                      beam-postgres-0.3.2.1 bifunctors-5.5.2 binary-0.8.5.1
                      bytestring-0.10.8.2 call-stack-0.1.0 case-insensitive-1.2.0.11
                      comonad-5.0.3 containers-0.5.10.2 contravariant-1.4.1 cpphs-1.20.8
                      deepseq-1.4.3.0 dependent-map-0.2.4.0 dependent-sum-0.4
                      distributive-0.5.3 dlist-0.8.0.4 entropy-0.3.8 exceptions-0.8.3
                      finite-typelits-0.1.3.0 free-4.12.4 ghc-boot-th-8.2.2
                      ghc-prim-0.5.1.1 hashable-1.2.7.0 haskell-src-exts-1.19.1
                      integer-gmp-1.0.1.0 integer-logarithms-1.0.2.1 kan-extensions-5.1
                      lens-4.16.1 microlens-0.4.8.3 mtl-2.2.2 network-uri-2.6.1.0
                      parallel-3.2.1.1 parsec-3.1.13.0 postgresql-libpq-0.9.4.1
                      postgresql-simple-0.5.3.0 pqueue-1.3.2.3 prelude-extras-0.4.0.3
                      pretty-1.1.3.3 primitive-0.6.3.0 profunctors-5.2.2 protolude-0.2.1
                      random-1.1 reflection-2.1.3 safe-0.3.17 scientific-0.3.5.3
                      scrypt-0.5.0 semigroupoids-5.2.2 stm-2.4.5.0 tagged-0.8.5
                      template-haskell-2.12.0.0 text-1.2.3.0 th-abstraction-0.2.6.0
                      time-1.8.0.2 time-locale-compat-0.1.1.3 transformers-0.5.2.0
                      transformers-compat-0.5.1.4 unix-2.7.2.2
                      unordered-containers-0.2.9.0 uuid-1.3.13 uuid-types-1.0.3
                      vector-0.12.0.1 vector-sized-0.6.1.0
orphans: beam-postgres-0.3.2.1:Database.Beam.Postgres.Migrate
         beam-postgres-0.3.2.1:Database.Beam.Postgres.Connection
         beam-postgres-0.3.2.1:Database.Beam.Postgres.PgSpecific
         beam-migrate-0.3.2.0:Database.Beam.Haskell.Syntax
         haskell-src-exts-1.19.1:Language.Haskell.Exts.Parser
         beam-postgres-0.3.2.1:Database.Beam.Postgres.Types
         beam-migrate-0.3.2.0:Database.Beam.Migrate.SQL.Builder
         pqueue-1.3.2.3:Data.PQueue.Min
         dependent-map-0.2.4.0:Data.Dependent.Map
         dependent-sum-0.4:Data.GADT.Compare
         beam-core-0.7.2.1:Database.Beam.Backend.Types
         reflection-2.1.3:Data.Reflection base-orphans-0.7:Data.Orphans
         stm-2.4.5.0:Control.Monad.STM
         attoparsec-0.13.2.2:Data.Attoparsec.Text.Internal
         attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Char8
         vector-0.12.0.1:Data.Vector.Unboxed
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         hashable-1.2.7.0:Data.Hashable.Generic text-1.2.3.0:Data.Text.Lazy
         vector-0.12.0.1:Data.Vector.Fusion.Bundle
         transformers-0.5.2.0:Control.Monad.Trans.Error
         text-1.2.3.0:Data.Text binary-0.8.5.1:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.0:Data.Text.Show base-4.10.1.0:GHC.Float
         base-4.10.1.0:GHC.Base
family instance modules: adjunctions-4.4:Data.Functor.Rep
                         aeson-1.2.4.0:Data.Aeson.Types.Internal
                         api-0.1.0.0-JXjIDZgbZwIJ0APHrPu5UG:Database.MasterEntity
                         api-0.1.0.0-JXjIDZgbZwIJ0APHrPu5UG:Models.Credentials
                         attoparsec-0.13.2.2:Data.Attoparsec.Internal.Types
                         base-4.10.1.0:Control.Applicative base-4.10.1.0:Data.Complex
                         base-4.10.1.0:Data.Either base-4.10.1.0:Data.Functor.Compose
                         base-4.10.1.0:Data.Functor.Const
                         base-4.10.1.0:Data.Functor.Identity
                         base-4.10.1.0:Data.Functor.Product base-4.10.1.0:Data.Functor.Sum
                         base-4.10.1.0:Data.List.NonEmpty base-4.10.1.0:Data.Monoid
                         base-4.10.1.0:Data.Semigroup base-4.10.1.0:Data.Type.Equality
                         base-4.10.1.0:Data.Version base-4.10.1.0:Data.Void
                         base-4.10.1.0:GHC.Exts base-4.10.1.0:GHC.Generics
                         base-4.10.1.0:GHC.IO.Exception base-4.10.1.0:GHC.TypeLits
                         base-4.10.1.0:GHC.TypeNats
                         beam-core-0.7.2.1:Database.Beam.Backend.SQL.AST
                         beam-core-0.7.2.1:Database.Beam.Backend.SQL.Builder
                         beam-core-0.7.2.1:Database.Beam.Backend.Types
                         beam-core-0.7.2.1:Database.Beam.Query.Combinators
                         beam-core-0.7.2.1:Database.Beam.Query.CustomSQL
                         beam-core-0.7.2.1:Database.Beam.Query.Internal
                         beam-core-0.7.2.1:Database.Beam.Query.Types
                         beam-core-0.7.2.1:Database.Beam.Schema.Tables
                         beam-migrate-0.3.2.0:Database.Beam.Haskell.Syntax
                         beam-migrate-0.3.2.0:Database.Beam.Migrate.Actions
                         beam-migrate-0.3.2.0:Database.Beam.Migrate.Checks
                         beam-migrate-0.3.2.0:Database.Beam.Migrate.SQL.Builder
                         beam-migrate-0.3.2.0:Database.Beam.Migrate.Serialization
                         beam-migrate-0.3.2.0:Database.Beam.Migrate.Types.CheckedEntities
                         beam-migrate-0.3.2.0:Database.Beam.Migrate.Types.Predicates
                         beam-postgres-0.3.2.1:Database.Beam.Postgres.Extensions
                         beam-postgres-0.3.2.1:Database.Beam.Postgres.PgSpecific
                         beam-postgres-0.3.2.1:Database.Beam.Postgres.Syntax
                         beam-postgres-0.3.2.1:Database.Beam.Postgres.Types
                         bifunctors-5.5.2:Data.Bifunctor.Biff
                         bifunctors-5.5.2:Data.Bifunctor.Clown
                         bifunctors-5.5.2:Data.Bifunctor.Fix
                         bifunctors-5.5.2:Data.Bifunctor.Flip
                         bifunctors-5.5.2:Data.Bifunctor.Join
                         bifunctors-5.5.2:Data.Bifunctor.Joker
                         bifunctors-5.5.2:Data.Bifunctor.Product
                         bifunctors-5.5.2:Data.Bifunctor.Sum
                         bifunctors-5.5.2:Data.Bifunctor.Tannen
                         bifunctors-5.5.2:Data.Bifunctor.Wrapped
                         containers-0.5.10.2:Data.IntMap.Internal
                         containers-0.5.10.2:Data.IntSet.Internal
                         containers-0.5.10.2:Data.Map.Internal
                         containers-0.5.10.2:Data.Sequence.Internal
                         containers-0.5.10.2:Data.Set.Internal containers-0.5.10.2:Data.Tree
                         dlist-0.8.0.4:Data.DList
                         finite-typelits-0.1.3.0:Data.Finite.Internal
                         ghc-boot-th-8.2.2:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.2.2:GHC.LanguageExtensions.Type
                         haskell-src-exts-1.19.1:Language.Haskell.Exts.SrcLoc
                         haskell-src-exts-1.19.1:Language.Haskell.Exts.Syntax
                         kan-extensions-5.1:Data.Functor.Day
                         kan-extensions-5.1:Data.Functor.Yoneda lens-4.16.1:Control.Lens.At
                         lens-4.16.1:Control.Lens.Internal.Indexed
                         lens-4.16.1:Control.Lens.Reified lens-4.16.1:Control.Lens.Tuple
                         lens-4.16.1:Control.Lens.Wrapped lens-4.16.1:Control.Lens.Zoom
                         microlens-0.4.8.3:Lens.Micro.Internal
                         network-uri-2.6.1.0:Network.URI
                         pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.Array
                         primitive-0.6.3.0:Data.Primitive.ByteArray
                         profunctors-5.2.2:Data.Profunctor.Composition
                         profunctors-5.2.2:Data.Profunctor.Rep tagged-0.8.5:Data.Tagged
                         template-haskell-2.12.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.0:Data.Text text-1.2.3.0:Data.Text.Lazy
                         th-abstraction-0.2.6.0:Language.Haskell.TH.Datatype
                         unordered-containers-0.2.9.0:Data.HashMap.Base
                         unordered-containers-0.2.9.0:Data.HashSet
                         uuid-types-1.0.3:Data.UUID.Types.Internal
                         uuid-types-1.0.3:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.1:Data.Vector vector-0.12.0.1:Data.Vector.Primitive
                         vector-0.12.0.1:Data.Vector.Storable
                         vector-0.12.0.1:Data.Vector.Unboxed
                         vector-0.12.0.1:Data.Vector.Unboxed.Base
                         vector-sized-0.6.1.0:Data.Vector.Generic.Sized
import  -/  aeson-1.2.4.0:Data.Aeson 5cd84e444e6f60fb8f170777913acd80
import  -/  aeson-1.2.4.0:Data.Aeson.Types.Internal 55e6fd0bcfbbd06588aa31f720b82778
import  -/  aeson-1.2.4.0:Data.Aeson.Types.ToJSON 86962dfb20db2e0af4020bc2a73f050b
import  -/  AppPrelude 8b403b19a73477bf6ded351e8350cfb7
  exports: 833a269d86971bb6039e3484bfdc1a18
import  -/  Database.MasterEntity b1a2d4b24895229e053ed42d9c8dc9a1
  exports: f1d85d73fc437a442b6c478d886c31af
  AppEntity 207352dddc77c697348836ee95993208
import  -/  Models.Credentials ef28ab83e80da5ba417f52f2420651ed
  exports: 6431f93a3ffcab558fb70a7ab1e8db5a
  Email 7936303da361307396d593d74077822a
  Email e64980b59617cdcdeb48948f7a153e95
import  -/  base-4.10.1.0:Data.Functor 2ffda4f936b8f474394d93205750aff3
import  -/  base-4.10.1.0:Data.Functor.Identity aae7a3124ea5423ea52291a312b43abe
import  -/  base-4.10.1.0:GHC.Base 782fd99b5e36f3698a26179a49afca64
import  -/  base-4.10.1.0:GHC.Generics c2a8006cab1f0055555a6c72607a574b
import  -/  base-4.10.1.0:GHC.Show 0a8ce2b5e533d1c2cfb7954e6736be45
import  -/  base-4.10.1.0:Prelude 31945b7d0084063347fc52506d3a4020
import  -/  beam-core-0.7.2.1:Database.Beam 35fd6826a8eadad243d13d0152a13f87
import  -/  beam-core-0.7.2.1:Database.Beam.Backend.SQL.SQL92 c3858538a689f526f7a277e368eff083
import  -/  beam-core-0.7.2.1:Database.Beam.Backend.Types f37ba0b91a7de6ff203548b65df0adc0
import  -/  beam-core-0.7.2.1:Database.Beam.Schema.Tables 05807973f142cbe0c80293f956245dbc
import  -/  beam-postgres-0.3.2.1:Database.Beam.Postgres 2b38d9be529c79f300829d63a584e51e
import  -/  beam-postgres-0.3.2.1:Database.Beam.Postgres.Types eeecb9033c96f7babca69407b9888d26
import  -/  ghc-prim-0.5.1.1:GHC.Classes 93e2660065dce9329577e83d76d8f0d4
import  -/  lens-4.16.1:Control.Lens b059236cf12a31b766c6d83fadcf9b94
import  -/  lens-4.16.1:Control.Lens.TH 6a3639e0ee2e0955470d343c18fd9a50
import  -/  lens-4.16.1:Control.Lens.Type 844f5962ececfca1051d024bb57ea80e
import  -/  postgresql-simple-0.5.3.0:Database.PostgreSQL.Simple.FromField b68de455ca10464ba39f8e58932fb1fe
import  -/  scrypt-0.5.0:Crypto.Scrypt 932c7a8b254bdb595a1761271a4cd38e
import  -/  text-1.2.3.0:Data.Text.Internal 5d98ec4bb692174ed69de0b9299773d5
e12875a9e4dbd38e2d05d23b650c24bc
  $fBeamableUserBase ::
    Database.Beam.Schema.Tables.Beamable Database.Tables.User.UserBase
  DFunId
80da391900710733dc37ab210413e9be
  $fFromBackendRowEmail ::
    Database.Beam.Backend.Types.FromBackendRow
      Database.Beam.Postgres.Types.Postgres Models.Credentials.Email
  DFunId
9e5be62bfe9cd05dcb5096e88bda2666
  $fFromBackendRowEncryptedPass ::
    Database.Beam.Backend.Types.FromBackendRow
      Database.Beam.Postgres.Types.Postgres Crypto.Scrypt.EncryptedPass
  DFunId
c966230d5b32a1979e11cb5789721775
  $fFromFieldEmail ::
    Database.PostgreSQL.Simple.FromField.FromField
      Models.Credentials.Email
  DFunId
924f455b522783f57ce1b55b9245f05c
  $fFromFieldEncryptedPass ::
    Database.PostgreSQL.Simple.FromField.FromField
      Crypto.Scrypt.EncryptedPass
  DFunId
03735ebfd19b3e76bc57525266059e04
  $fGenericEncryptedPass ::
    GHC.Generics.Generic Crypto.Scrypt.EncryptedPass
  DFunId
e12875a9e4dbd38e2d05d23b650c24bc
  $fGenericUserBase ::
    GHC.Generics.Generic (Database.Tables.User.UserBase f)
  DFunId
ef1ab51f2ac1926ac11dfc0efc56d63d
  $fHasSqlValueSyntaxbeEmail ::
    Database.Beam.Backend.SQL.SQL92.HasSqlValueSyntax
      be GHC.Base.String =>
    Database.Beam.Backend.SQL.SQL92.HasSqlValueSyntax
      be Models.Credentials.Email
  DFunId
a565b392e822df5c6f9708c8300a50b0
  $fHasSqlValueSyntaxbeEncryptedPass ::
    Database.Beam.Backend.SQL.SQL92.HasSqlValueSyntax
      be GHC.Base.String =>
    Database.Beam.Backend.SQL.SQL92.HasSqlValueSyntax
      be Crypto.Scrypt.EncryptedPass
  DFunId
e12875a9e4dbd38e2d05d23b650c24bc
  $fShowUserBase ::
    GHC.Show.Show
      (Database.Tables.User.UserBase Data.Functor.Identity.Identity)
  DFunId
e12875a9e4dbd38e2d05d23b650c24bc
  $fToJSONUserBase ::
    Data.Aeson.Types.ToJSON.ToJSON Database.Tables.User.User
  DFunId
e12875a9e4dbd38e2d05d23b650c24bc
  $sel:_email:User ::
    Database.Tables.User.UserBase f
    -> Database.Beam.Schema.Tables.C f Data.Text.Internal.Text
  RecSel Left Database.Tables.User.UserBase
e12875a9e4dbd38e2d05d23b650c24bc
  $sel:_password:User ::
    Database.Tables.User.UserBase f
    -> Database.Beam.Schema.Tables.C f Crypto.Scrypt.EncryptedPass
  RecSel Left Database.Tables.User.UserBase
c15d2dff45a92201c924c735d5f8656f
  $tcUserBase :: GHC.Types.TyCon
b7f6e221b9a693ba92424031c5bf2198
  $trModule :: GHC.Types.Module
3668f52f5df50fbcef0c14e944e862fc
  axiom Database.Tables.User.Rep_EncryptedPass::
      GHC.Generics.Rep Crypto.Scrypt.EncryptedPass
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "EncryptedPass"
               "Crypto.Scrypt"
               "scrypt-0.5.0-BjQreZ3EgNw1xj6TLQEeZ5"
               'GHC.Types.True)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "EncryptedPass" 'GHC.Generics.PrefixI 'GHC.Types.True)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "getEncryptedPass")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 Data.ByteString.Internal.ByteString)))
e12875a9e4dbd38e2d05d23b650c24bc
  axiom Database.Tables.User.Rep_UserBase::
    [(f :: * -> *)]
      GHC.Generics.Rep (Database.Tables.User.UserBase f)
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "UserBase"
               "Database.Tables.User"
               "api-0.1.0.0-JXjIDZgbZwIJ0APHrPu5UG"
               'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "User" 'GHC.Generics.PrefixI 'GHC.Types.True)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "_email")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0
                     (Database.Beam.Schema.Tables.C f Data.Text.Internal.Text))
                GHC.Generics.:*: GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "_password")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0
                                      (Database.Beam.Schema.Tables.C
                                         f Crypto.Scrypt.EncryptedPass))))
e12875a9e4dbd38e2d05d23b650c24bc
  type User =
    Database.Tables.User.UserBase Data.Functor.Identity.Identity
e12875a9e4dbd38e2d05d23b650c24bc
  type role UserBase nominal
  data UserBase (f :: * -> *)
    = User {_email :: Database.Beam.Schema.Tables.C
                        f Data.Text.Internal.Text,
            _password :: Database.Beam.Schema.Tables.C
                           f Crypto.Scrypt.EncryptedPass}
d2c6e94e95814c0ecac33a1ed47c1452
  type UserEntity =
    Database.Tables.User.UserT Data.Functor.Identity.Identity
1b73889ccfc56ff02c50b4fa48273dfd
  type UserT =
    Database.MasterEntity.AppEntity Database.Tables.User.UserBase
    :: (* -> *) -> *
721c37f57cc05d4e621fdcffc5a01501
  email ::
    Control.Lens.Type.Lens'
      (Database.Tables.User.UserBase f)
      (Database.Beam.Schema.Tables.C f Data.Text.Internal.Text)
8b448ffd48527d90d4a67a3692a10634
  password ::
    Control.Lens.Type.Lens'
      (Database.Tables.User.UserBase f)
      (Database.Beam.Schema.Tables.C f Crypto.Scrypt.EncryptedPass)
instance Database.Beam.Schema.Tables.Beamable [Database.Tables.User.UserBase]
  = Database.Tables.User.$fBeamableUserBase
instance [orphan] Database.Beam.Backend.Types.FromBackendRow [Database.Beam.Postgres.Types.Postgres,
                                                              Models.Credentials.Email]
  = Database.Tables.User.$fFromBackendRowEmail
instance [orphan] Database.Beam.Backend.Types.FromBackendRow [Database.Beam.Postgres.Types.Postgres,
                                                              Crypto.Scrypt.EncryptedPass]
  = Database.Tables.User.$fFromBackendRowEncryptedPass
instance [orphan] Database.PostgreSQL.Simple.FromField.FromField [Models.Credentials.Email]
  = Database.Tables.User.$fFromFieldEmail
instance [orphan] Database.PostgreSQL.Simple.FromField.FromField [Crypto.Scrypt.EncryptedPass]
  = Database.Tables.User.$fFromFieldEncryptedPass
instance [orphan] GHC.Generics.Generic [Crypto.Scrypt.EncryptedPass]
  = Database.Tables.User.$fGenericEncryptedPass
instance GHC.Generics.Generic [Database.Tables.User.UserBase]
  = Database.Tables.User.$fGenericUserBase
instance [orphan] Database.Beam.Backend.SQL.SQL92.HasSqlValueSyntax [.,
                                                                     Models.Credentials.Email]
  = Database.Tables.User.$fHasSqlValueSyntaxbeEmail
instance [orphan] Database.Beam.Backend.SQL.SQL92.HasSqlValueSyntax [.,
                                                                     Crypto.Scrypt.EncryptedPass]
  = Database.Tables.User.$fHasSqlValueSyntaxbeEncryptedPass
instance GHC.Show.Show [Database.Tables.User.UserBase]
  = Database.Tables.User.$fShowUserBase
instance Data.Aeson.Types.ToJSON.ToJSON [Database.Tables.User.UserBase]
  = Database.Tables.User.$fToJSONUserBase
family instance [orphan] GHC.Generics.Rep [Crypto.Scrypt.EncryptedPass]
  = Database.Tables.User.Rep_EncryptedPass
family instance GHC.Generics.Rep [Database.Tables.User.UserBase]
  = Database.Tables.User.Rep_UserBase
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

